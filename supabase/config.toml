
project_id = "cnoqknkqvygbrbzgnswn"

[api]
# Port to use for the API URL.
port = 54321
# Schemas to expose in your API. Tables, views and stored procedures in this schema will get API
# endpoints. public and storage are always included.
schemas = ["public", "storage"]
# Extra schemas to add to the search_path of every request. public is always included.
extra_search_path = ["public", "extensions"]
# Maximum rows returns from a view, table, or stored procedure. Limits payload size for accidental
# or malicious requests.
max_rows = 1000

[db]
# Port to use for the local database URL.
port = 54322
# Port used by psql, the Postgres CLI, to connect to the database.
shadow_port = 54320
# The database major version to use. This has to be the same as your remote database's. Run `SHOW
# server_version;` on the remote database to check.
major_version = 15

[studio]
enabled = true
# Port to use for Supabase Studio.
port = 54323
# External URL of the API server that frontend connects to.
api_url = "http://localhost"

# Email testing server. Emails sent with the local dev setup are not actually sent - rather, they
# are monitored, and you can view the emails that would have been sent from the web interface.
[inbucket]
# Port to use for the email testing server web interface.
port = 54324
# Uncomment to expose additional ports for testing user applications that send emails.
# smtp_port = 54325
# pop3_port = 54326

[storage]
# The maximum file size allowed (e.g. "5MB", "500KB").
file_size_limit = "50MiB"

[auth]
# The base URL of your website. Used as an allow-list for redirects and for constructing URLs used
# in emails.
site_url = "http://localhost:3000"
# A list of *exact* URLs that auth providers are permitted to redirect to post authentication.
additional_redirect_urls = [
  "https://localhost:3000"
]
# How long tokens are valid for, in seconds. Defaults to 3600 (1 hour), maximum 604,800 (1 week).
jwt_expiry = 3600
# Allow/disallow new user signups to your project.
enable_signup = true
# If enabled, a user will be required to confirm any email change on both the old, and new email
# addresses. If disabled, only the new email is required to confirm.
double_confirm_changes = true
# If enabled, users need to confirm their email address before signing in.
enable_confirmations = false

# Uncomment to customize email template
# [auth.email]
# Enable email confirmations
# enable_confirmations = false
# Template for the email confirmation URL.
# url = "{{ .SiteURL }}/auth/v1/verify"
# Template for the email confirmation URL for Android
# android_url = "{{ .SiteURL }}/auth/v1/verify"
# Email template for sending the confirmation link to the user.
# template = ""

# Use an external OAuth provider.
[auth.external.apple]
enabled = false
# client_id = ""
# secret = ""
# Additional scopes to request from Apple.
# scopes = ["name", "email"]
redirect_uri = "{{ .SiteURL }}/auth/v1/callback"
url = "https://appleid.apple.com/auth/authorize"
token_url = "https://appleid.apple.com/auth/token"

[auth.external.google]
enabled = false
# client_id = ""
# secret = ""
# Additional scopes to request from Google.
# scopes = []
redirect_uri = "{{ .SiteURL }}/auth/v1/callback"
url = "https://accounts.google.com/o/oauth2/auth"
token_url = "https://accounts.google.com/o/oauth2/token"

[auth.external.github]
enabled = false
# client_id = ""
# secret = ""
# Additional scopes to request from GitHub.
# scopes = []
redirect_uri = "{{ .SiteURL }}/auth/v1/callback"
url = "https://github.com/login/oauth/authorize"
token_url = "https://github.com/login/oauth/access_token"

[auth.external.facebook]
enabled = false
# client_id = ""
# secret = ""
# Additional scopes to request from Facebook.
# scopes = []
redirect_uri = "{{ .SiteURL }}/auth/v1/callback"
url = "https://facebook.com/v19.0/dialog/oauth"
token_url = "https://graph.facebook.com/v19.0/oauth/access_token"

[auth.external.discord]
enabled = false
# client_id = ""
# secret = ""
# Additional scopes to request from Discord.
# scopes = []
redirect_uri = "{{ .SiteURL }}/auth/v1/callback"
url = "https://discord.com/oauth2/authorize"
token_url = "https://discord.com/api/oauth2/token"

[auth.external.bitbucket]
enabled = false
# client_id = ""
# secret = ""
redirect_uri = "{{ .SiteURL }}/auth/v1/callback"
url = "https://bitbucket.org/site/oauth2/authorize"
token_url = "https://bitbucket.org/site/oauth2/access_token"

[auth.external.twitch]
enabled = false
# client_id = ""
# secret = ""
# Additional scopes to request from Twitch.
# scopes = []
redirect_uri = "{{ .SiteURL }}/auth/v1/callback"
url = "https://id.twitch.tv/oauth2/authorize"
token_url = "https://id.twitch.tv/oauth2/token"

[auth.external.linkedin]
enabled = false
# client_id = ""
# secret = ""
# Additional scopes to request from LinkedIn.
# scopes = []
redirect_uri = "{{ .SiteURL }}/auth/v1/callback"
url = "https://www.linkedin.com/oauth/v2/authorization"
token_url = "https://www.linkedin.com/oauth/v2/accessToken"

[auth.external.spotify]
enabled = false
# client_id = ""
# secret = ""
# Additional scopes to request from Spotify.
# scopes = []
redirect_uri = "{{ .SiteURL }}/auth/v1/callback"
url = "https://accounts.spotify.com/authorize"
token_url = "https://accounts.spotify.com/api/token"

[auth.external.workos]
enabled = false
# client_id = ""
# secret = ""
# Additional scopes to request from WorkOS.
# scopes = []
# Use the connection or organization field. For more information, refer to WorkOS documentation.
# connection = ""
# organization = ""
redirect_uri = "{{ .SiteURL }}/auth/v1/callback"
url = "https://api.workos.com/sso/authorize"
token_url = "https://api.workos.com/sso/token"

[auth.external.azure]
enabled = false
# client_id = ""
# secret = ""
# Additional scopes to request from Azure.
# scopes = []
# For more information, refer to Azure documentation.
# tenant = "common"
redirect_uri = "{{ .SiteURL }}/auth/v1/callback"
url = "https://login.microsoftonline.com/common/oauth2/v2.0/authorize"
token_url = "https://login.microsoftonline.com/common/oauth2/v2.0/token"

[auth.external.keycloak]
enabled = false
# client_id = ""
# secret = ""
url = ""
token_url = ""
redirect_uri = "{{ .SiteURL }}/auth/v1/callback"
# Uncomment the 'additional_parameters' field to add additional parameters to the /authorize URL.
# additional_parameters = {kc_idp_hint = "google"}

[auth.external.notion]
enabled = false
# client_id = ""
# secret = ""
# For more information on scopes, refer to Notion documentation.
# scopes = ["basic"]
# Notion API version. The latest version is "2022-06-28". For more information, refer to Notion
# documentation.
# version = "2022-02-22"
redirect_uri = "{{ .SiteURL }}/auth/v1/callback"
url = "https://api.notion.com/v1/oauth/authorize"
token_url = "https://api.notion.com/v1/oauth/token"

[auth.external.saml]
enabled = false
# An arbitrary string to identify the SAML Identity Provider (IdP) entity.
# entity_id = ""
# The SAML IdP's metadata XML URL.
# metadata_url = ""
# The SAML IdP's Single Sign-On (SSO) service URL.
# sso_url = ""
# The SAML IdP's X.509 Certificate.
# certificate = ""
# Set the 'email_attribute' to the name of the attribute in the SAML assertion that corresponds to
# the email address.
# email_attribute = "email"
# Uncomment the 'audience' field to set a specific audience for the SAML assertion.
# audience = ""
# Set the 'attribute_mapping' field to map SAML attributes to profile attributes. Refer to the
# documentation for more information on SAML attribute mapping.
# attribute_mapping = {given_name = "first_name", family_name = "last_name"}

[auth.external.zoom]
enabled = false
# client_id = ""
# secret = ""
redirect_uri = "{{ .SiteURL }}/auth/v1/callback"
url = "https://zoom.us/oauth/authorize"
token_url = "https://zoom.us/oauth/token"

[auth.external.gitlab]
enabled = false
# client_id = ""
# secret = ""
redirect_uri = "{{ .SiteURL }}/auth/v1/callback"
url = "https://gitlab.com/oauth/authorize"
token_url = "https://gitlab.com/oauth/token"

[auth.external.slack]
enabled = false
# client_id = ""
# secret = ""
redirect_uri = "{{ .SiteURL }}/auth/v1/callback"
url = "https://slack.com/oauth/authorize"
token_url = "https://slack.com/api/oauth.access"

[analytics]
enabled = false
# Vector port for the analytics postgres server.
port = 54327
# Port for the API server that tracks events sent from the client SDK.
backends_port = 54328
# Interval to run sync jobs.
gcs_sync_interval = "60m"
# Metadata sync interval from the Google Cloud Storage.
s3_sync_interval = "60m"

[[functions]]
name = "analyze-image"
verify_jwt = false
system_on_behalf_of_users = false

[[functions]]
name = "search-dupes"
verify_jwt = false
system_on_behalf_of_users = false

[[functions]]
name = "process-brands"
verify_jwt = false
system_on_behalf_of_users = false

[[functions]]
name = "process-ingredients"
verify_jwt = false
system_on_behalf_of_users = false

[[functions]]
name = "process-reviews"
verify_jwt = false
system_on_behalf_of_users = false

[[functions]]
name = "process-resources"
verify_jwt = false
system_on_behalf_of_users = false

[[functions]]
name = "process-detailed-analysis"
verify_jwt = false
system_on_behalf_of_users = false

[[functions]]
name = "analyze-input"
verify_jwt = false
system_on_behalf_of_users = false

[[functions]]
name = "find-dupes"
verify_jwt = false
system_on_behalf_of_users = false

[[functions]]
name = "populate-brands-and-ingredients"
verify_jwt = false
system_on_behalf_of_users = false

[[functions]]
name = "process-voice"
verify_jwt = false
system_on_behalf_of_users = false
